Las listas son igual q vectores q puedo guardar diferentes tipos de datos
Puedo guardar dentro de una lista un entero, un booleano, un tring y un true

ej: pepe[1, 'hola', True, 2, 453]

si imprimo pepe me sale lo siguiente:  [1, hola, True, 2, 453]

-si quiero acceder a un dato particular como hola, debo poner: pepe[1]


- si quiero AGREGAR    un valor a mi lista pepe lo hago con un metodo
pepe.append(False) #esto es un metodo q agrega False al final de pepe

"Si imprimo pepe" print (pepe)  = [1, hola, True, 2, 453, False]

- si quiero BORRAR un valor a mi lista pepe lo hago con un metodo
pepe.pop(3) #borro el elemento q esta en la posicion 3

print(pepe)   =  [1, hola, True, 453, False]  #borre el numero 2 q estaba en la posicion 3

- si quiero recorrer una lista, lo hago con for
for elementos in pepe:
    print(pepe)  # imprime cada uno de los elementos de la lista pepe cada uno con un endline

- si quiero imprimir la lista en reverso, pongo
 pepe[::-1]   #esto me imprime la lista en forma de atras para adelante \ y puedo jugar desde donde a donde y en q forma puedo imprimir o recorrer la lista




Declarar lista

  my_lista = []
  my_lista = list()



Unir listas

  my_lista = [1]
  my_lista2 = [2,3,4]
  my_lista3 = my_lista + my_lista2
  my_lista3 # [1,2,3,4]


Partir listas como slices

  my_lista = [1,2,3]
  my_lista[1:] = [2,3]


Extender una lista
  
  my_lista = [1]
  my_lista2 = [2,3,4]
  my_lista.extend(my_lista2) # [1,2,3,4]


Multiplicar listas
  
  my_lista = ['a']
  my_lista2 = my_lista * 5
  my_lista2 # ['a','a','a','a','a'] 


Eliminar el último elemento de la lista
  
  my_lista = [1,2,3,4,5]
  my_lista = my_lista.pop()
  my_lista # [1,2,3,4]


Ordenar lista

  my_lista = [2,1,5,4,3]
  my_lista = my_lista.sort()
  my_lista # [1,2,3,4,5]


Eliminar un elemento

  my_lista = [1,2,3,4,5]
  del my_lista[0]
  my_lista # [2,3,4,5]
  mi_lista.pop(2)  #me borra el elemento q esta en la posicion 2  q seria la 3 contando desde cero


Eliminar si conocemos su valor

  my_lista = [1,2,3,4,5]
  my_lista.remove(3)
  my_lista #[1,2,4,5]


saber qué métodos hay dentro de un elemento

  my_lista = [1,2,3,4,5]
  dir(my_lista) # ['__add__', '__class__', '__contains__', ...


Modificar un elemento

  my_lista = [1,2,3,4,5]
  my_lista[0] = 100
  my_lista # [100,2,3,4,5]


Añadir un elemento al final

  my_lista = [1,2,3,4,5]
  my_lista.append(6)
  my_lista # [1,2,3,4,5,6]


Organizar una lista

 my_lista = [2,5,1,3,4]
 my_lista.sort() #[1,2,3,4,5]


Imprimir elemento por elemento
 
  for elemento in my_lista 
    print(elemento)         #me imprime elemento por elemento que hay dentro de mi lista con un endl de por medio..
                            # en este aso 1 2 3 4 5 todos separados con endl


Métodos adicionales para listas
.sorted()
También ordena como sort() pero modifica la lista inicial
.clear()
Vacía la lista
.count()
Cuenta las veces que esta un elemento en lista
.index()
Indica la posición donde esta un elemento de la lista
.insert()
Inserta un elemento en una posición dada ej: lista.insert(posición,item)
.reverse()
Le da la vuelta a una lista